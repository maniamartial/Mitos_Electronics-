{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/MITOS/frontend/src/pages/admin_pages/UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    productId\n  } = useParams();\n  const [productData, setProductData] = useState({\n    name: \"\",\n    price: 0,\n    description: \"\",\n    stock: 0,\n    category: \"\",\n    // You may need to set up category selection\n    image: null // You can handle image update using state and input\n  });\n\n  useEffect(() => {\n    // Fetch product data by ID\n    axios.get(`http://127.0.0.1:8000/api/products/${productId}`).then(response => {\n      setProductData(response.data);\n    });\n  }, [productId]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Put the updated product data to the server\n    axios.put(`http://127.0.0.1:8000/api/electronics/${productId}`, productData).then(response => {\n      console.log(\"Product updated:\", response.data);\n      // Redirect to products page after successful update\n      window.location.href = \"/view-products\";\n    }).catch(error => {\n      console.error(\"Error updating product:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"v8TDatckuQUwbFRTg3beWbqW/Tw=\", false, function () {\n  return [useParams];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","UpdateProduct","_s","productId","productData","setProductData","name","price","description","stock","category","image","get","then","response","data","handleSubmit","e","preventDefault","put","console","log","window","location","href","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/oem/Desktop/MITOS/frontend/src/pages/admin_pages/UpdateProduct.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpdateProduct = () => {\n  const { productId } = useParams();\n  const [productData, setProductData] = useState({\n    name: \"\",\n    price: 0,\n    description: \"\",\n    stock: 0,\n    category: \"\", // You may need to set up category selection\n    image: null, // You can handle image update using state and input\n  });\n\n  useEffect(() => {\n    // Fetch product data by ID\n    axios\n      .get(`http://127.0.0.1:8000/api/products/${productId}`)\n      .then((response) => {\n        setProductData(response.data);\n      });\n  }, [productId]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Put the updated product data to the server\n    axios\n      .put(`http://127.0.0.1:8000/api/electronics/${productId}`, productData)\n      .then((response) => {\n        console.log(\"Product updated:\", response.data);\n        // Redirect to products page after successful update\n        window.location.href = \"/view-products\";\n      })\n      .catch((error) => {\n        console.error(\"Error updating product:\", error);\n      });\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Update Product</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Form fields pre-populated with product data */}\n        {/* Use appropriate input elements for each field */}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Update\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,CAAC;EACjC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAC7CW,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,EAAE;IAAE;IACdC,KAAK,EAAE,IAAI,CAAE;EACf,CAAC,CAAC;;EAEFf,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFe,GAAG,CAAE,sCAAqCT,SAAU,EAAC,CAAC,CACtDU,IAAI,CAAEC,QAAQ,IAAK;MAClBT,cAAc,CAACS,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACArB,KAAK,CACFsB,GAAG,CAAE,yCAAwChB,SAAU,EAAC,EAAEC,WAAW,CAAC,CACtES,IAAI,CAAEC,QAAQ,IAAK;MAClBM,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,QAAQ,CAACC,IAAI,CAAC;MAC9C;MACAO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,gBAAgB;IACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B5B,OAAA;MAAA4B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAMiC,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,eAG3B5B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhDID,aAAa;EAAA,QACKH,SAAS;AAAA;AAAAqC,EAAA,GAD3BlC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}